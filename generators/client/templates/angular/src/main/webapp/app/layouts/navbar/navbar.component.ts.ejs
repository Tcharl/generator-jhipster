<%#
 Copyright 2013-2018 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
<%_ if (authenticationType !== 'oauth2') { _%>
import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';
<%_ } _%>
import { JhiLanguageService } from 'ng-jhipster';
<%_ if (enableTranslation) { _%>
import { SessionStorageService } from 'ngx-webstorage';
<%_ } _%>

import { VERSION } from 'app/app.constants';
import { <% if (enableTranslation) { %>JhiLanguageHelper, <% } %>Principal, <% if (authenticationType !== 'oauth2') { %>LoginModalService, <% } %>LoginService } from 'app/core';
import { ProfileService } from '../profiles/profile.service';

@Component({
    selector: '<%= jhiPrefixDashed %>-navbar',
    templateUrl: './navbar.component.html',
    styleUrls: [
<%_ if (useSass) { _%>
        'navbar.scss'
<%_ } else { _%>
        'navbar.css'
<%_ } _%>
    ]
})
export class NavbarComponent implements OnInit {
    inProduction: boolean;
    isNavbarCollapsed: boolean;
    languages: any[];
    swaggerEnabled: boolean;
<%_ if (authenticationType !== 'oauth2') { _%>
    modalRef: NgbModalRef;
<%_ } _%>
    version: string;

    /**
     * Creates an instance of NavbarComponent.
     * @param {LoginService} loginService supplies login services (for user's authentication)
<%_ if (enableTranslation) { _%>
     * @param {JhiEventManager} eventManager handles events emition and subscription
     * @param {JhiLanguageService} languageService handles language changes
     * @param {JhiLanguageHelper} languageHelper helper for language handling
     * @param {SessionStorageService} sessionStorage session storage to store user's data
<%_ } _%>
     * @param {Principal} principal represents user's identity and user's authentication state
<%_ if (authenticationType !== 'oauth2') { _%>
     * @param {LoginModalService} loginModalService supplies login modal services (for user's authentication)
<%_ } _%>
     * @param {ProfileService} profileService supplies profile info
     * @param {Router} router to navigate in the different pages accessible from the navbar
     * @param {NotificationService} notificationService supplies notifications services
     * @memberof NavbarComponent
     */
    constructor(
        private loginService: LoginService,
<%_ if (enableTranslation) { _%>
        private languageService: JhiLanguageService,
        private languageHelper: JhiLanguageHelper,
        private sessionStorage: SessionStorageService,
<%_ } _%>
        private principal: Principal,
<%_ if (authenticationType !== 'oauth2') { _%>
        private loginModalService: LoginModalService,
<%_ } _%>
        private profileService: ProfileService,
        private router: Router
    ) {
        this.version = VERSION ? 'v' + VERSION : '';
        this.isNavbarCollapsed = true;
    }

    /**
     * Called at the component initialization and get the different languages and the profile info
     * @memberof NavbarComponent
     */
    ngOnInit() {
        <%_ if (enableTranslation) { _%>
        this.languageHelper.getAll().then((languages) => {
            this.languages = languages;
        });

        <%_ } _%>
        this.profileService.getProfileInfo().then((profileInfo) => {
            this.inProduction = profileInfo.inProduction;
            this.swaggerEnabled = profileInfo.swaggerEnabled;
        });
    }

<%_ if (enableTranslation) { _%>
    /**
     * Translate in the chosen language
     * @param {string} languageKey key that represents the selected language
     * @memberof NavbarComponent
     */
    changeLanguage(languageKey: string) {
        this.sessionStorage.store('locale', languageKey);
        this.languageService.changeLanguage(languageKey);
    }

<%_ } _%>
    collapseNavbar() {
        this.isNavbarCollapsed = true;
    }

    /**
     * Return the result of user authentication
     * @returns True if the user is authenticated, false otherwise
     * @memberof NavbarComponent
     */
    isAuthenticated() {
        return this.principal.isAuthenticated();
    }

    /**
     * Open the login modal
     * @memberof NavbarComponent
     */
    login() {
        <%_ if (authenticationType !== 'oauth2') { _%>
        this.modalRef = this.loginModalService.open();
        <%_ } else { _%>
        this.loginService.login();
        <%_ } _%>
    }

    /**
     * Log the user out, end the notification service and navigate to 'welcome' page
     * @memberof NavbarComponent
     */
    logout() {
        this.collapseNavbar();
        this.loginService.logout();
        this.router.navigate(['']);
    }

    toggleNavbar() {
        this.isNavbarCollapsed = !this.isNavbarCollapsed;
    }

    /**
     * Return the user profile image if he or she is authenticated
     * @returns the user profile image or null
     * @memberof NavbarComponent
     */
    getImageUrl() {
        return this.isAuthenticated() ? this.principal.getImageUrl() : null;
    }
}
