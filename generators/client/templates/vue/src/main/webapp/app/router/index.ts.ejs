import Vue from 'vue';
import Component from 'vue-class-component';
Component.registerHooks([
  'beforeRouteEnter',
  'beforeRouteLeave',
  'beforeRouteUpdate' // for vue-router 2.2+
])
import Router from 'vue-router';

const Home = () => import('@/core/home/home.vue');
const Error = () => import('@/core/error/error.vue');
<%_ if (!skipUserManagement) { _%>
import account from "@/router/account";
<%_ } _%>
import admin from "@/router/admin";
import entities from "@/router/entities";
import pages from "@/router/pages";
<%_ if (applicationTypeGateway && microfrontend) { _%>

  <%_ for (const remote of remotes) { _%>
const <%= remote.lowercaseBaseName %>Router = await import('@<%= remote.lowercaseBaseName %>/entities-router').then(module => module.default).catch(() => []);
  <%_ } _%>
<%_ } _%>

Vue.use(Router);

// prettier-ignore
export default new Router({
  mode: 'history',
  routes: [
    {
      path: '/',
      name: 'Home',
      component: Home
    },
    {
      path: '/forbidden',
      name: 'Forbidden',
      component: Error,
      meta: { error403: true }
    },
    {
      path: '/not-found',
      name: 'NotFound',
      component: Error,
      meta: { error404: true }
    },
<%_ if (!skipUserManagement) { _%>
    ...account,
<%_ } _%>
    ...admin,
    ...entities,
<%_ if (applicationTypeGateway && microfrontend) { _%>
  <%_ for (const remote of remotes) { _%>
    ...<%= remote.lowercaseBaseName %>Router,
  <%_ } _%>
<%_ } _%>
    ...pages
  ]
});
